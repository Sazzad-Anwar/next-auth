import React, { useEffect, useState } from 'react';
import Head from 'next/head';
import Image from 'next/image';
import Loader from '@/components/Loader';
import { signOut, useSession } from 'next-auth/react';
import { useRouter } from 'next/router';
import api from '@/utils/AxiosInstance';
import useSWR from 'swr';
import { Fetcher } from '@/utils/Fetcher';
import { Config } from '@/config/config';
import Cookies from 'js-cookie';

interface IUser {
    firstName: string;
    lastName: string;
    userName: string;
    email: string;
    avatar: string;
    gender: string;
    role: string;
    phone: string;
    bio: string;
    password?: string;
}

export default function Save() {
    let session = useSession();
    let router = useRouter();
    let { data: userData } = useSWR(
        session?.status === 'authenticated' ? '/auth/user' : null,
        Fetcher,
    );
    let [user, setUser] = useState<IUser>({
        firstName: '',
        lastName: '',
        userName: '',
        email: '',
        avatar: '',
        gender: '',
        role: '',
        phone: '',
        bio: '',
    });

    useEffect(() => {
        if (session?.status === 'authenticated') {
            setUser({
                firstName: userData && userData?.response ? userData?.response?.firstName : '',
                lastName: userData && userData?.response ? userData?.response?.lastName : '',
                userName:
                    userData && userData?.response
                        ? userData?.response?.userName
                        : session?.data?.user?.name.split(' ').join('').toLowerCase(),
                email:
                    userData && userData?.response
                        ? userData?.response?.email
                        : session?.data?.user?.email,
                avatar:
                    userData && userData?.response
                        ? Config.bucketLink + '/' + userData?.response?.avatar
                        : session?.data?.user?.image,
                gender: userData && userData?.response ? userData?.response?.gender : 'male',
                role: userData && userData?.response ? userData?.response?.roleSlug : 'cj',
                phone: userData && userData?.response ? userData?.response?.phone : '',
                bio: userData && userData?.response ? userData?.response?.bio : '',
            });
        } else {
            router.push('/');
        }
    }, [session, userData, router]);

    let saveUser = async () => {
        user.avatar = 'avatar/cl9perpew000kp39x4h13i7l3.webp';
        try {
            if (userData && userData) {
                await api.put(`/user/${userData?.response?.id}`, user);
                router.push('/profile');
            } else {
                let { data, status } = await api.post('/auth/signup', user);
                console.log(status);
                if (data && data?.response) {
                    Cookies.set('token', data?.response?.token, { expires: 7 });
                    router.push('/profile');
                }
            }
        } catch (err: any) {
            console.log(err?.response?.message ?? err?.message);
        }
    };

    const logout = async () => {
        await api.get('/auth/logout');
        signOut();
        router.push('/');
    };

    if (session.status === 'loading') {
        return <Loader />;
    }

    return (
        <div className="bg-gray-800 min-h-screen">
            <Head>
                <title>Next Sign up</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="bg-gray-800 min-h-screen flex justify-center items-center text-white">
                <div className="w-[320px] sm:w-[375px]  md:w-[475px] lg:w-[575px] mx-auto overflow-auto">
                    <h1 className="text-white text-xl font-bold text-center mb-3">
                        Next auth user sign up
                    </h1>
                    <Image
                        className="rounded-full mx-auto"
                        src={user?.avatar}
                        height={79}
                        width={79}
                        priority
                        alt={session.data?.user?.name ?? 'guest-user'}
                    />
                    <div className="my-5">
                        <div className="grid grid-cols-2 gap-3 mb-5">
                            <div>
                                <label
                                    htmlFor="firstName"
                                    className="text-base font-semibold mb-2 block"
                                >
                                    First Name
                                </label>
                                <input
                                    id="firstName"
                                    type="text"
                                    className="focus:outline-none border rounded border-gray-600 w-full h-10 px-3 text-white bg-transparent"
                                    placeholder="John"
                                    value={user?.firstName}
                                    onChange={(e) =>
                                        setUser({ ...user, firstName: e.target.value })
                                    }
                                />
                            </div>
                            <div>
                                <label
                                    htmlFor="lastName"
                                    className="text-base font-semibold mb-2 block"
                                >
                                    Last Name
                                </label>
                                <input
                                    id="lastName"
                                    type="text"
                                    className="focus:outline-none border rounded border-gray-600 w-full h-10 px-3 text-white bg-transparent"
                                    placeholder="Doe"
                                    value={user?.lastName}
                                    onChange={(e) => setUser({ ...user, lastName: e.target.value })}
                                />
                            </div>
                        </div>
                        <div className="mb-5">
                            <label
                                htmlFor="userName"
                                className="text-base font-semibold mb-2 block"
                            >
                                User Name
                            </label>
                            <input
                                id="userName"
                                type="text"
                                className="focus:outline-none border rounded border-gray-600 w-full h-10 px-3 text-white bg-transparent"
                                value={user?.userName}
                                placeholder="johndoe"
                                onChange={(e) => setUser({ ...user, userName: e.target.value })}
                            />
                        </div>
                        <div className="mb-5">
                            <label htmlFor="email" className="text-base font-semibold mb-2 block">
                                Email
                            </label>
                            <input
                                id="email"
                                type="email"
                                className="focus:outline-none border rounded border-gray-600 w-full h-10 px-3 text-white bg-transparent"
                                value={user?.email}
                                placeholder="user@email.com"
                                onChange={(e) => setUser({ ...user, email: e.target.value })}
                            />
                        </div>
                        <div className="mb-5">
                            <label htmlFor="phone" className="text-base font-semibold mb-2 block">
                                Phone Number
                            </label>
                            <input
                                id="phoneNumber"
                                type="text"
                                className="focus:outline-none border rounded border-gray-600 w-full h-10 px-3 text-white bg-transparent"
                                value={user?.phone}
                                placeholder="+880 0000000000"
                                onChange={(e) => setUser({ ...user, phone: e.target.value })}
                            />
                        </div>
                        <div className="mb-5">
                            <label htmlFor="gender" className="text-base font-semibold mb-2 block">
                                Gender
                            </label>
                            <select
                                id="gender"
                                className="focus:outline-none border rounded border-gray-600 w-full h-10 px-3 text-white bg-transparent"
                                value={user?.gender}
                                placeholder="Select gender"
                                onChange={(e) => {
                                    setUser({ ...user, gender: e.target.value });
                                }}
                            >
                                <option value="male">Male</option>
                                <option value="female">Female</option>
                            </select>
                        </div>
                        <div className="mb-5">
                            <label htmlFor="bio" className="text-base font-semibold mb-2 block">
                                Bio
                            </label>
                            <textarea
                                id="bio"
                                className="focus:outline-none border rounded border-gray-600 w-full min-h-10 p-3 text-white bg-transparent"
                                value={user?.bio}
                                placeholder="Bio of user"
                                rows={2}
                                onChange={(e) => setUser({ ...user, bio: e.target.value })}
                            />
                        </div>
                        <div className="flex items-center">
                            <button
                                onClick={() => saveUser()}
                                className="mb-5 text-center rounded border w-full py-3 border-blue-500 bg-blue-800 text-white hover:bg-blue-900"
                            >
                                {userData && userData ? 'Save' : 'Sign Up'}
                            </button>
                            <button
                                onClick={() => {
                                    logout();
                                }}
                                className="mb-5 ml-5 text-center rounded border w-full py-3 border-blue-500 bg-blue-800 text-white hover:bg-blue-900"
                            >
                                Back
                            </button>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    );
}
